syntax = "proto3";

package nexus_dao.mapping.v1;

message Proposal {
    uint64 id = 1;
    string title = 2;
    string proposer = 3;
    string summary = 4;
    string body = 5;
    uint64 dao_id = 6;
    uint64 created = 7;
    uint64 duration = 8;
    uint32 proposal_type = 9;
    uint64 adopt = 10;
    uint64 reject = 11;
    uint32 status = 12;
}

message Profile {
    string name = 1;
    string avatar = 2;
    string bio = 3;
}

message DAOSchema {
    string name = 1;
    uint32 dao_type = 2;
    string creater = 3;
    string icon = 4;
    string description = 5;
    string official_link = 6;
}

message DAO {
    uint64 id = 1;
    string name = 2;
    uint32 dao_type = 3;
    string creator = 4;
    uint64 token_info_id = 5;
    string icon = 6;
    string description = 7;
    string official_link = 8;
    uint64 proposal_count = 9;
    uint64 pass_proposal_count = 10;
    uint64 vote_count = 11;
    uint64 passed_votes_proportion = 12;
    uint64 passed_tokens_proportion = 13;
}

message Token {
    string owner = 1;
    uint64 gates = 2;
    uint64 token_info_id = 3;
    uint64 amount = 4;
    uint64 expires = 5;
    uint64 staked_at = 6;
}

message HoldToken {
    string token_owner = 1;
    uint64 amount = 2;
    uint64 token_info_id = 3;
}

message TokenInfo {
	uint64 id = 1;
	string name = 2;
	string symbol = 3;
	uint64 supply = 4;
	uint32 decimals = 5;
	uint64 max_mint_amount = 6;
	uint64 minted_amount = 7;
	uint64 dao_id = 8;
	bool only_creator_can_mint = 9;
}

message TokenInfoSchema {
	string name = 1;
	string symbol = 2;
	uint64 supply = 3;
	uint32 decimals = 4;
	uint64 max_mint_amount = 5;
}

message Vote {
	string voter = 1;
	uint64 proposal_id = 2;
	bool is_agreed = 3;
	uint64 timestamp = 4;
	uint64 amount = 5;
}

message MappingAutoIncrement {
	map<uint32, uint64> auto_increment = 1;
}

message MappingProfiles {
	map<string, Profile> profiles = 1;
}

message MappingDaos {
	map<uint64, DAO> daos = 1;
}

message MappingTokenInfos {
	map<uint64, TokenInfo> token_infos = 1;
}

message MappingBalances {
	map<string, HoldToken> balances = 1;
}

message MappingStakeAmounts {
	map<string, HoldToken> stake_amounts = 1;
}

message MappingProposals {
	map<uint64, Proposal> proposals = 1;
}

message MappingVotes {
	map<uint64, Vote> votes = 1;
}

message MappingExtendPledgePeriod {
	map<uint64, uint64> extend_pledge_period = 1;
}